version: "3.4"

name: bank-2

services:

  mariadb:
    image: mariadb:10.6
    container_name: mariadb
    restart: on-failure
    expose:
      - "3306"
    ports:
      - "3306:3306"
    environment:
      MARIADB_ROOT_USER: root
      MARIADB_ROOT_PASSWORD: root
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: [ "CMD", "bash", "/healthcheck.sh" ]
      interval: 2s
      timeout: 5s
      retries: 5
      start_period: 15s
    volumes:
      - ./docker/healthcheck/mariadb/healthcheck.sh:/healthcheck.sh:ro
      - ./docker/provision/mariadb/mariadb-init.sql:/docker-entrypoint-initdb.d/mariadb-init.sql:ro
      - mariadb:/var/lib/mysql
    networks:
      - bank2_net
    profiles: [
      "core",
      "full",
      "only-users",
      "only-main",
      "only-otc",
      "only-client",
      "except-users",
      "except-main",
      "except-otc",
      "except-client",
    ]

  mongodb:
    image: mongodb/mongodb-community-server:6.0-ubi8
    container_name: mongodb
    restart: on-failure
    expose:
      - "27017"
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    healthcheck:
      test: [ "CMD", "bash", "/healthcheck.sh" ]
      interval: 2s
      timeout: 10s
      retries: 5
      start_period: 25s
    volumes:
      - ./docker/healthcheck/mongodb/healthcheck.sh:/healthcheck.sh:ro
      - ./docker/provision/mongodb/mongodb-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - mongodb:/var/lib/mongodb
    networks:
      - bank2_net
    profiles: [
      "core",
      "full",
      "only-users",
      "only-main",
      "only-otc",
      "only-client",
      "except-users",
      "except-main",
      "except-otc",
      "except-client",
    ]

  flyway:
    image: flyway/flyway:9
    container_name: flyway
    restart: on-failure
    command: "-url=jdbc:mariadb://mariadb:3306/dev -schemas=users -user=root -password=root -connectRetries=60 migrate &&
              -url=jdbc:mariadb://mariadb:3306/test -schemas=users -user=root -password=root -connectRetries=60 migrate &&
              -url=jdbc:mariadb://mariadb:3306/prod -schemas=users -user=root -password=root -connectRetries=60 migrate"
    volumes:
      - ./flyway/sql:/flyway/sql
      - ./flyway/conf:/flyway/conf
    depends_on:
      mariadb:
        condition: service_healthy
    networks:
      - bank2_net
    profiles: [
      "core",
      "full",
      "only-users",
      "only-main",
      "only-otc",
      "only-client",
      "except-users",
      "except-main",
      "except-otc",
      "except-client",
    ]

  redis:
    image: redis:7.0.11-alpine
    container_name: redis
    expose:
      - "6379"
    ports:
      - "6379:6379"
    restart: on-failure
    volumes:
      - redis:/bitnami/redis/data
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - bank2_net
    profiles: [
      "core",
      "full",
      "only-users",
      "only-main",
      "only-otc",
      "only-client",
      "except-users",
      "except-main",
      "except-otc",
      "except-client",
    ]

  prometheus:
    container_name: prometheus
    image: quay.io/prometheus/prometheus:v2.44.0
    ports:
      - "9090:9090"
    volumes:
      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
    networks:
      - bank2_net
    profiles: ["full"]

  # Default username/password: admin/admin
  grafana:
    container_name: grafana
    image: docker.io/grafana/grafana-oss:9.5.2
    ports:
      - "3000:3000"
    volumes:
      - grafana:/var/lib/grafana
    user: 'root'
    networks:
      - bank2_net
    profiles: ["full"]

  # TODO add health check for users
  users:
    container_name: users
    image: harbor.k8s.elab.rs/banka-2/users
    build:
      context: .
      dockerfile: ./docker/users.Dockerfile
    expose:
      - "8080"
    ports:
      - "8080:8080"
    healthcheck:
      test: [ "CMD", "curl", "localhost:8080" ]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 45s
    depends_on:
      mariadb:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      flyway:
        condition: service_completed_successfully
    entrypoint: [ "java", "-Dspring.profiles.active=container,test", "-jar", "app.jar" ]
    networks:
      - bank2_net
    profiles: [
      "full",
      "only-users",
      "except-main",
      "except-otc",
      "except-client",
    ]

  # TODO add health check for main
  main:
    container_name: main
    image: harbor.k8s.elab.rs/banka-2/main
    build:
      context: .
      dockerfile: ./docker/main.Dockerfile
    expose:
      - "8081"
    ports:
      - "8081:8081"
    healthcheck:
      test: [ "CMD", "curl", "localhost:8081" ]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 45s
    depends_on:
      mariadb:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      flyway:
        condition: service_completed_successfully
      users:
        condition: service_healthy
    entrypoint: [ "java", "-Dspring.profiles.active=container,test", "-jar", "app.jar" ]
    networks:
      - bank2_net
    profiles: [
      "full",
      "only-main",
      "except-users",
      "except-otc",
      "except-client",
    ]

  # TODO add health check for OTC
  otc:
    container_name: otc
    image: harbor.k8s.elab.rs/banka-2/otc
    build:
      context: .
      dockerfile: ./docker/otc.Dockerfile
    expose:
      - "8082"
    ports:
      - "8082:8082"
    healthcheck:
      test: [ "CMD", "curl", "localhost:8082" ]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 45s
    depends_on:
      mariadb:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      flyway:
        condition: service_completed_successfully
      users:
        condition: service_healthy
    entrypoint: [ "java", "-Dspring.profiles.active=container,test", "-jar", "app.jar" ]
    networks:
      - bank2_net
    profiles: [
      "full",
      "only-otc",
      "except-users",
      "except-main",
      "except-client",
    ]

  # TODO add health check for Client
  client:
    container_name: client
    image: harbor.k8s.elab.rs/banka-2/client
    build:
      context: .
      dockerfile: ./docker/client.Dockerfile
    expose:
      - "8083"
    ports:
      - "8083:8083"
    healthcheck:
      test: [ "CMD", "curl", "localhost:8083" ]
      interval: 30s
      timeout: 10s
      retries: 10
      start_period: 45s
    depends_on:
      mariadb:
        condition: service_healthy
      mongodb:
        condition: service_healthy
      flyway:
        condition: service_completed_successfully
      users:
        condition: service_healthy
    entrypoint: [ "java", "-Dspring.profiles.active=container,test", "-jar", "app.jar" ]
    networks:
      - bank2_net
    profiles: [
      "full",
      "only-client",
      "except-users",
      "except-main",
      "except-otc",
    ]

volumes:
  mariadb:
  mongodb:
  redis:
  grafana:

networks:
  bank2_net:
    external: true